/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package ecu.edu.espol.proyectopoo;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;


/**
 *
 * @author aquin
 */
public class Vendedor extends Cliente{

    public Vendedor(String nombre, String apellido, String organizacion, String correo, String clave) {
        super(nombre, apellido, organizacion, correo, clave);
    }
    
    public static void aceptarOferta()throws NoSuchAlgorithmException{
        Scanner sc=new Scanner(System.in);
        System.out.println("Ingresar correo: ");
        String correo=sc.nextLine();
        System.out.println("Ingrese clave");
        String clave = sc.nextLine();
        
        boolean entrada=false;
        for(Cliente c:getClientes()){
            if(correo.equals(c.getCorreo())){                
                byte[]hashedClave=getSHA(clave);
                String hashedClaveString = toHexString(hashedClave);
                if(hashedClaveString.equals(c.getClave())){
                    System.out.println("Inicio de sesión");
                    entrada = true;
                    break;
                }else{
                    System.out.println("Clave incorrecta");
                    break;
                }
            }
        }
   
    }
    public static void eliminarVehiculo(String placa){
        System.out.println("El vehículo con placa "+placa+ "ha sido eliminada");
    }
    public static void enviarConGmail(String destinatario,String asunto,String cuerpo){
        String remitente="remitente@gmail.com";
        String claveEmail="contraseña";
        
        Properties props=System.getProperties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.user", remitente);
        props.put("mail.smtp.clave", claveEmail);
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true"); 
        props.put("mail.smtp.port", "587");
        
        
        Session session = Session.getDefaultInstance(props);
        MimeMessage message = new MimeMessage(session);
        
        
        try {
        message.setFrom(new InternetAddress(remitente));
        message.addRecipient(Message.RecipientType.TO, new InternetAddress(destinatario));   
        message.setSubject(asunto);
        message.setText(cuerpo);
        Transport transport = session.getTransport("smtp");
        transport.connect("smtp.gmail.com", remitente, claveEmail);
        transport.sendMessage(message, message.getAllRecipients());
        transport.close();
    }
    catch (MessagingException me) {
        me.printStackTrace();   
    }
    }    
     public static void revisarOfertas(String placa, ArrayList<HashMap<String, Object>> ofertasPlaca) {
        if(!ofertasPlaca.isEmpty()){
            int index = 0;
            while(index>= 0 && index<ofertasPlaca.size()) {
                HashMap<String, Object> oferta = ofertasPlaca.get(index);
                String correo = (String) oferta.get("correo");
                double precioOfertado = (double) oferta.get("precioOfertado");
                System.out.println("Oferta "+(index+1));
                System.out.println("Correo: "+correo);
                System.out.println("Precio Ofertado: "+precioOfertado);
                System.out.println("1.Siguiente Oferta");
                System.out.println("2.Anterior Oferta");
                System.out.println("3.Aceptar Oferta");

                Scanner sc=new Scanner(System.in);
                int opcion=sc.nextInt();
                

                switch(opcion){
                    case 1:
                        index++;
                        break;
                    case 2:
                        index--;
                        break;
                    case 3:
                        System.out.println("Oferta aceptada");
                        return;
                    
                }
            }
        } else {
            System.out.println("No hay ofertas");

        }
    }

    @Override
    public String toString(){
        return "VENDEDOR,"+ super.toString();
    }
    
    public static Vendedor nextVendedor(){
        Scanner sc = new Scanner(System.in);
        System.out.print("Ingrese nombres: ");
        String nombre = sc.nextLine();
        System.out.print("Ingrese apellidos: ");
        String apellido = sc.nextLine();
        System.out.print("Ingrese organización: ");
        String organizacion = sc.nextLine();
        
        
        String correo;
        boolean bandera;
        do{
            System.out.print("Ingrese correo: ");
            correo = sc.nextLine();
            bandera= Cliente.validarCorreoUnico(correo);
        }while(bandera);
        
        System.out.print("Ingrese su clave: ");
        String clave = sc.nextLine();
        
        
        
        return new Vendedor(nombre,apellido,organizacion,correo,clave);
        
    }
    
    
    
    public static void agregarVendedor(Vendedor v){
        FileWriter fw= null;
        BufferedWriter bfw= null;
        try{
           fw= new FileWriter("Archivo.csv",true);
           bfw= new BufferedWriter(fw);
           bfw.write(v.toString()+"\n");
           System.out.println("\nSe ha registrado correctamente");
        }catch(IOException e){
            System.out.println("\nError abriendo el archivo: " + e);
        }finally {
            try{
                if (bfw != null) {
                    bfw.close();
            }
                if (fw != null) {
                    fw.close();
                }
                
            }catch(IOException e2){
                System.out.println("\nNo se pudo cerrar el archivo: " +e2);
            }
        }
        
    }
    
    public static void menuVendedor(int opcion){
        Scanner sc= new Scanner(System.in);
        int opcion_vendedor;
        do {
        System.out.println("\n1. Registrar un nuevo vendedor");
        System.out.println("2. Registrar un nuevo vehículo");
        System.out.println("3. Aceptar oferta");
        System.out.println("4. Regresar");
        System.out.print("\nIngrese una opción: ");
        try{
        opcion_vendedor= sc.nextInt();
        switch(opcion_vendedor){
            case 1:
                
                Vendedor v=nextVendedor();
                agregarVendedor(v);
                break;
            case 2:
                Vehiculo vehiculo= Vehiculo.nextVehiculo();
                
                break;
            case 3:
                break;
            case 4:
                break;
            
            default:
                System.out.println("\nIngrese una opcion correcta");
                break;
        }
        }catch(InputMismatchException e){
            System.out.println("\nIngrese un número válido");
            sc.nextLine(); 
            opcion_vendedor = 0;
        }
        }while (opcion_vendedor < 1 || opcion_vendedor > 4);
          
    
    }

    public List<String>  buscarOfertas(String placa_buscar){
        List<String> lofertas=Comprador.buscarTipo("OFERTA");
        String nombreArchivo = "Archivo.csv";

        try (BufferedReader br = new BufferedReader(new FileReader(nombreArchivo))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                
                if (!linea.equals("TipoUsuario,nombres,apellidos,organizacion,correo,clave")) {
                    for(String s: lofertas){
                        String[] datos_oferta= s.split(";");
                        String placa= datos_oferta[1];
                        if(placa.equals(placa_buscar)){
                            lofertas.add(s);
                        }
                        
                    } 
                }
            }
        } catch (IOException e) {
            System.out.println("Error al leer el archivo: " + e.getMessage());
        }
        return lofertas;
    }

    public static void mostrarOferta(List<String> lofertas){
        boolean bandera= true;
        Scanner sc= new Scanner(System.in);
        if(lofertas != null || !lofertas.isEmpty()){
            sacarOferta(lofertas);
            while(bandera){  
            for(String s: lofertas){
                if (s.equals(lofertas.get(0))){
                    String[] datos= s.split(";");
                    String precio_ofertado= datos[5];
                    String correo= datos[4];
                    System.out.println("\nCorreo: "+ correo);
                    System.out.println("Precio ofertado: "+ precio_ofertado);
                    System.out.println("\n1.- Siguiente Oferta");
                    //System.out.println("2.- Anterior Oferta");
                    System.out.println("3.- Aceptar Oferta");
                    System.out.print("Ingrese una opción: ");
                    int opcion= sc.nextInt();
                    
                }else if(!s.equals(lofertas.get(0)) ){
                    String[] datos= s.split(";");
                    String precio_ofertado= datos[5];
                    String correo= datos[4];
                    System.out.println("\nCorreo: "+ correo);
                    System.out.println("Precio ofertado: "+ precio_ofertado);
                    System.out.println("\n1.- Siguiente Oferta");
                    System.out.println("2.- Anterior Oferta");
                    System.out.println("3.- Aceptar Oferta");
                    System.out.print("Ingrese una opción: ");
                    int opcion= sc.nextInt();
                    
                }else if(s.equals(lofertas.get(lofertas.size()-1))){
                    String[] datos= s.split(";");
                    String precio_ofertado= datos[5];
                    String correo= datos[4];
                    System.out.println("\nCorreo: "+ correo);
                    System.out.println("Precio ofertado: "+ precio_ofertado);
                    //System.out.println("\n1.- Siguiente Oferta");
                    System.out.println("2.- Anterior Oferta");
                    System.out.println("3.- Aceptar Oferta");
                    System.out.print("Ingrese una opción: ");
                    int opcion= sc.nextInt();
                }
                
            }
            bandera= false;
             
        }
        }else System.out.println("No hay ofertas");
                
    }
    
    public static List<String> crearOfertas(String correo, List<String> lvehiculos, double precio_ofertado){
        List<String> lofertas= new ArrayList<>();
        for(String s: lvehiculos){
            String[] datos_vehiculos= s.split(";");
            String placa= datos_vehiculos[1];
            String marca= datos_vehiculos[2];
            String modelo= datos_vehiculos[3];
            String precio= datos_vehiculos[8];
            String oferta= "OFERTA,"+placa+","+marca+","+modelo+","+correo+","+precio_ofertado+ ","+precio;
            lofertas.add(oferta);
        }
        return lofertas;
    }
    public static void sacarOferta(List<String> lofertas){
        String oferta0= lofertas.get(0);
        String[] datos= oferta0.split(";");
        String precio= datos[6];
        String marca= datos[2];
        String modelo= datos[3];
        String datos_vehiculo= marca+" "+modelo+" Precio:"+precio;
        System.out.println(datos_vehiculo);
        System.out.println("Se han realizado "+ lofertas.size()+" ofertas");  
    }
    
    
}
